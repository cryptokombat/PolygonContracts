/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KombatMarket, KombatMarketInterface } from "../KombatMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVombat",
        name: "_vombat",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasure",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_collections",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "BatchPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Purchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "heroes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    name: "TokenPricesSet",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedCollections",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchPurchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collectionPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
    ],
    name: "isCollectionAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_list",
        type: "address[]",
      },
    ],
    name: "setAllowedCollections",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokens",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]",
      },
    ],
    name: "setTokenPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasure",
        type: "address",
      },
    ],
    name: "setTreasure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasure",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vombat",
    outputs: [
      {
        internalType: "contract IVombat",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162001e8638038062001e868339810160408190526200003591620002ec565b604080518082018252600d81526c12dbdb58985d0813585c9ad95d609a1b6020808301918252835180850185526001808252603160f81b9183019190915280559151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818801959095526060810193909352608080840192909252308382018190528651808503909201825260c0938401909652805194019390932090925291905261012052600280546001600160a01b038581166001600160a01b0319928316179092556003805492851692909116919091179055620001528162000168565b6200015f60003362000181565b505050620003ec565b80516200017d9060049060208401906200022a565b5050565b6000828152602081815260408083206001600160a01b03851684529091529020546200017d908390839060ff166200017d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001e63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b82805482825590600052602060002090810192821562000282579160200282015b828111156200028257825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200024b565b506200029092915062000294565b5090565b5b8082111562000290576000815560010162000295565b6001600160a01b0381168114620002c157600080fd5b50565b8051620002d181620002ab565b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200030257600080fd5b83516200030f81620002ab565b809350506020808501516200032481620002ab565b60408601519093506001600160401b03808211156200034257600080fd5b818701915087601f8301126200035757600080fd5b8151818111156200036c576200036c620002d6565b8060051b604051601f19603f83011681018181108582111715620003945762000394620002d6565b60405291825284820192508381018501918a831115620003b357600080fd5b938501935b82851015620003dc57620003cc85620002c4565b84529385019392850192620003b8565b8096505050505050509250925092565b60805160a05160c05160e0516101005161012051611a4a6200043c6000396000610e5501526000610ea401526000610e7f01526000610dd801526000610e0201526000610e2c0152611a4a6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80634ca38d4a116100a25780639d8725a8116100715780639d8725a814610254578063a217fddf1461027f578063bb8493b914610287578063d547741f1461029a578063e520fc7e146102ad57600080fd5b80634ca38d4a146101f05780635bba6dd71461021b57806391d148541461022e57806398968f151461024157600080fd5b806327713536116100e9578063277135361461019c5780632c7f5a37146101af5780632f2ff15d146101c25780633644e515146101d557806336568abe146101dd57600080fd5b806301ffc9a71461011b5780631d3cd2a6146101435780631e79b0ef14610158578063248a9ca31461016b575b600080fd5b61012e61012936600461141e565b6102c0565b60405190151581526020015b60405180910390f35b610156610151366004611464565b6102f7565b005b61012e610166366004611464565b61038a565b61018e61017936600461147f565b60009081526020819052604090206001015490565b60405190815260200161013a565b6101566101aa366004611503565b6103f4565b6101566101bd3660046115fb565b610448565b6101566101d036600461166f565b61058a565b61018e6105b5565b6101566101eb36600461166f565b6105c4565b6102036101fe36600461147f565b610642565b6040516001600160a01b03909116815260200161013a565b6101566102293660046115fb565b61066c565b61012e61023c36600461166f565b6109a0565b61015661024f36600461169b565b6109c9565b61018e6102623660046116ce565b600560209081526000928352604080842090915290825290205481565b61018e600081565b600254610203906001600160a01b031681565b6101566102a836600461166f565b610caa565b600354610203906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b14806102f157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6103026000336109a0565b6103275760405162461bcd60e51b815260040161031e906116f8565b60405180910390fd5b6001600160a01b0381166103685760405162461bcd60e51b8152602060048201526008602482015267216164647265737360c01b604482015260640161031e565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000805b6004548110156103eb57826001600160a01b0316600482815481106103b5576103b5611718565b6000918252602090912001546001600160a01b031614156103d95750600192915050565b806103e381611744565b91505061038e565b50600092915050565b6103ff6000336109a0565b61041b5760405162461bcd60e51b815260040161031e906116f8565b600081511161043c5760405162461bcd60e51b815260040161031e9061175f565b61044581610cd0565b50565b6104536000336109a0565b61046f5760405162461bcd60e51b815260040161031e906116f8565b80518251146104905760405162461bcd60e51b815260040161031e9061175f565b60005b82518110156105495760008382815181106104b0576104b0611718565b6020026020010151905060008383815181106104ce576104ce611718565b60200260200101519050600081116105115760405162461bcd60e51b815260206004820152600660248201526521707269636560d01b604482015260640161031e565b6001600160a01b038616600090815260056020908152604080832094835293905291909120558061054181611744565b915050610493565b507f6cd64c1b57dbd9e80b5c06079d63cdfbb74057b7b4f0e5534034752a95e19e4483838360405161057d939291906117bb565b60405180910390a1505050565b6000828152602081905260409020600101546105a68133610ce3565b6105b08383610d47565b505050565b60006105bf610dcb565b905090565b6001600160a01b03811633146106345760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161031e565b61063e8282610ef2565b5050565b6004818154811061065257600080fd5b6000918252602090912001546001600160a01b0316905081565b600260015414156106bf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161031e565b60026001556106cd8361038a565b6107075760405162461bcd60e51b815260206004820152600b60248201526a10b1b7b63632b1ba34b7b760a91b604482015260640161031e565b80518251146107285760405162461bcd60e51b815260040161031e9061175f565b826000805b84518110156108af57600085828151811061074a5761074a611718565b60200260200101519050600085838151811061076857610768611718565b6020908102919091018101516001600160a01b038a16600090815260058352604080822086835290935291909120549091506107a59082906117fb565b6107af908561181a565b604051634f558e7960e01b8152600481018490529094506001600160a01b03861690634f558e799060240160206040518083038186803b1580156107f257600080fd5b505afa158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a9190611832565b6108605760405162461bcd60e51b81526020600482015260076024820152662165786973747360c81b604482015260640161031e565b6000811161089a5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b604482015260640161031e565b505080806108a790611744565b91505061072d565b506108cf335b6003546002546001600160a01b0390811692911684610f57565b60408051600081526020810191829052630fbfeffd60e11b9091526001600160a01b03831690631f7fdffa9061090e90339088908890602481016118ac565b600060405180830381600087803b15801561092857600080fd5b505af115801561093c573d6000803e3d6000fd5b50505050846001600160a01b03166109513390565b6001600160a01b03167f1777d63b673d1d88a9b47422cea0d88c4ee4b50c0363eef98d4393548b4c080986868560405161098d939291906118f6565b60405180910390a3505060018055505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60026001541415610a1c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161031e565b6002600155610a2a8361038a565b610a645760405162461bcd60e51b815260206004820152600b60248201526a10b1b7b63632b1ba34b7b760a91b604482015260640161031e565b81610a9a5760405162461bcd60e51b815260206004820152600660248201526510ba37b5b2b760d11b604482015260640161031e565b6001600160a01b0383166000908152600560209081526040808320858452909152902054610af35760405162461bcd60e51b815260206004820152600660248201526521707269636560d01b604482015260640161031e565b604051634f558e7960e01b81526004810183905283906001600160a01b03821690634f558e799060240160206040518083038186803b158015610b3557600080fd5b505afa158015610b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6d9190611832565b610ba35760405162461bcd60e51b81526020600482015260076024820152662165786973747360c81b604482015260640161031e565b6001600160a01b0384166000908152600560209081526040808320868452909152812054610bd29084906117fb565b9050610bdd336108b5565b6040805160008152602081019182905263731133e960e01b9091526001600160a01b0383169063731133e990610c1c903390889088906024810161192c565b600060405180830381600087803b158015610c3657600080fd5b505af1158015610c4a573d6000803e3d6000fd5b50505050846001600160a01b0316610c5f3390565b60408051878152602081018790529081018490526001600160a01b0391909116907fb362243af1e2070d7d5bf8d713f2e0fab64203f1b71462afbe20572909788c5e9060600161098d565b600082815260208190526040902060010154610cc68133610ce3565b6105b08383610ef2565b805161063e9060049060208401906113a4565b610ced82826109a0565b61063e57610d05816001600160a01b03166014610fb7565b610d10836020610fb7565b604051602001610d21929190611959565b60408051601f198184030181529082905262461bcd60e51b825261031e916004016119ce565b610d5182826109a0565b61063e576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610d873390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610e2457507f000000000000000000000000000000000000000000000000000000000000000046145b15610e4e57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b610efc82826109a0565b1561063e576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610fb190859061115a565b50505050565b60606000610fc68360026117fb565b610fd190600261181a565b67ffffffffffffffff811115610fe957610fe9611498565b6040519080825280601f01601f191660200182016040528015611013576020820181803683370190505b509050600360fc1b8160008151811061102e5761102e611718565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061105d5761105d611718565b60200101906001600160f81b031916908160001a90535060006110818460026117fb565b61108c90600161181a565b90505b6001811115611104576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110c0576110c0611718565b1a60f81b8282815181106110d6576110d6611718565b60200101906001600160f81b031916908160001a90535060049490941c936110fd816119e1565b905061108f565b5083156111535760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161031e565b9392505050565b60006111af826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661122c9092919063ffffffff16565b8051909150156105b057808060200190518101906111cd9190611832565b6105b05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161031e565b606061123b8484600085611243565b949350505050565b6060824710156112a45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161031e565b843b6112f25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161031e565b600080866001600160a01b0316858760405161130e91906119f8565b60006040518083038185875af1925050503d806000811461134b576040519150601f19603f3d011682016040523d82523d6000602084013e611350565b606091505b509150915061136082828661136b565b979650505050505050565b6060831561137a575081611153565b82511561138a5782518084602001fd5b8160405162461bcd60e51b815260040161031e91906119ce565b8280548282559060005260206000209081019282156113f9579160200282015b828111156113f957825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906113c4565b50611405929150611409565b5090565b5b80821115611405576000815560010161140a565b60006020828403121561143057600080fd5b81356001600160e01b03198116811461115357600080fd5b80356001600160a01b038116811461145f57600080fd5b919050565b60006020828403121561147657600080fd5b61115382611448565b60006020828403121561149157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114d7576114d7611498565b604052919050565b600067ffffffffffffffff8211156114f9576114f9611498565b5060051b60200190565b6000602080838503121561151657600080fd5b823567ffffffffffffffff81111561152d57600080fd5b8301601f8101851361153e57600080fd5b803561155161154c826114df565b6114ae565b81815260059190911b8201830190838101908783111561157057600080fd5b928401925b828410156113605761158684611448565b82529284019290840190611575565b600082601f8301126115a657600080fd5b813560206115b661154c836114df565b82815260059290921b840181019181810190868411156115d557600080fd5b8286015b848110156115f057803583529183019183016115d9565b509695505050505050565b60008060006060848603121561161057600080fd5b61161984611448565b9250602084013567ffffffffffffffff8082111561163657600080fd5b61164287838801611595565b9350604086013591508082111561165857600080fd5b5061166586828701611595565b9150509250925092565b6000806040838503121561168257600080fd5b8235915061169260208401611448565b90509250929050565b6000806000606084860312156116b057600080fd5b6116b984611448565b95602085013595506040909401359392505050565b600080604083850312156116e157600080fd5b6116ea83611448565b946020939093013593505050565b60208082526006908201526510b0b236b4b760d11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156117585761175861172e565b5060010190565b602080825260079082015266042d8cadccee8d60cb1b604082015260600190565b600081518084526020808501945080840160005b838110156117b057815187529582019590820190600101611794565b509495945050505050565b6001600160a01b03841681526060602082018190526000906117df90830185611780565b82810360408401526117f18185611780565b9695505050505050565b60008160001904831182151516156118155761181561172e565b500290565b6000821982111561182d5761182d61172e565b500190565b60006020828403121561184457600080fd5b8151801515811461115357600080fd5b60005b8381101561186f578181015183820152602001611857565b83811115610fb15750506000910152565b60008151808452611898816020860160208601611854565b601f01601f19169290920160200192915050565b6001600160a01b03851681526080602082018190526000906118d090830186611780565b82810360408401526118e28186611780565b905082810360608401526113608185611880565b6060815260006119096060830186611780565b828103602084015261191b8186611780565b915050826040830152949350505050565b60018060a01b03851681528360208201528260408201526080606082015260006117f16080830184611880565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611991816017850160208801611854565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516119c2816028840160208801611854565b01602801949350505050565b6020815260006111536020830184611880565b6000816119f0576119f061172e565b506000190190565b60008251611a0a818460208701611854565b919091019291505056fea264697066735822122035661702f256e3fc714e47510a658ab703dbcdcc265be553cc6403d34902adaa64736f6c63430008090033";

type KombatMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KombatMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KombatMarket__factory extends ContractFactory {
  constructor(...args: KombatMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "KombatMarket";
  }

  deploy(
    _vombat: string,
    _treasure: string,
    _collections: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KombatMarket> {
    return super.deploy(
      _vombat,
      _treasure,
      _collections,
      overrides || {}
    ) as Promise<KombatMarket>;
  }
  getDeployTransaction(
    _vombat: string,
    _treasure: string,
    _collections: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vombat,
      _treasure,
      _collections,
      overrides || {}
    );
  }
  attach(address: string): KombatMarket {
    return super.attach(address) as KombatMarket;
  }
  connect(signer: Signer): KombatMarket__factory {
    return super.connect(signer) as KombatMarket__factory;
  }
  static readonly contractName: "KombatMarket";
  public readonly contractName: "KombatMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KombatMarketInterface {
    return new utils.Interface(_abi) as KombatMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KombatMarket {
    return new Contract(address, _abi, signerOrProvider) as KombatMarket;
  }
}
