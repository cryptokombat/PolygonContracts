/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC223, TestERC223Interface } from "../TestERC223";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000eeb38038062000eeb8339810160408190526200003491620001e6565b8181818181600390805190602001906200005092919062000073565b5080516200006690600490602084019062000073565b505050505050506200028d565b828054620000819062000250565b90600052602060002090601f016020900481019282620000a55760008555620000f0565b82601f10620000c057805160ff1916838001178555620000f0565b82800160010185558215620000f0579182015b82811115620000f0578251825591602001919060010190620000d3565b50620000fe92915062000102565b5090565b5b80821115620000fe576000815560010162000103565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014157600080fd5b81516001600160401b03808211156200015e576200015e62000119565b604051601f8301601f19908116603f0116810190828211818310171562000189576200018962000119565b81604052838152602092508683858801011115620001a657600080fd5b600091505b83821015620001ca5785820183015181830184015290820190620001ab565b83821115620001dc5760008385830101525b9695505050505050565b60008060408385031215620001fa57600080fd5b82516001600160401b03808211156200021257600080fd5b62000220868387016200012f565b935060208501519150808211156200023757600080fd5b5062000246858286016200012f565b9150509250929050565b600181811c908216806200026557607f821691505b602082108114156200028757634e487b7160e01b600052602260045260246000fd5b50919050565b610c4e806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634000aea01161008c578063a457c2d711610066578063a457c2d7146101a0578063a9059cbb146101b3578063dd62ed3e146101c6578063e30443bc146101ff57600080fd5b80634000aea01461015c57806370a082311461016f57806395d89b411461019857600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc610214565b6040516100e991906109e5565b60405180910390f35b610105610100366004610a56565b6102a6565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610a80565b6102bc565b604051601281526020016100e9565b610105610157366004610a56565b61036b565b61010561016a366004610abc565b6103a7565b61011961017d366004610b43565b6001600160a01b031660009081526020819052604090205490565b6100dc6103bc565b6101056101ae366004610a56565b6103cb565b6101056101c1366004610a56565b610464565b6101196101d4366004610b65565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021261020d366004610a56565b610471565b005b60606003805461022390610b98565b80601f016020809104026020016040519081016040528092919081815260200182805461024f90610b98565b801561029c5780601f106102715761010080835404028352916020019161029c565b820191906000526020600020905b81548152906001019060200180831161027f57829003601f168201915b5050505050905090565b60006102b33384846104c5565b50600192915050565b60006102c98484846105e9565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103535760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61036085338584036104c5565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102b39185906103a2908690610be9565b6104c5565b60006103b38585610464565b95945050505050565b60606004805461022390610b98565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561044d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161034a565b61045a33858584036104c5565b5060019392505050565b60006102b33384846105e9565b6001600160a01b038216600090815260208190526040902054818110156104aa576104a5836104a08385610c01565b6107b8565b505050565b818111156104a5576104a5836104c08484610c01565b610897565b6001600160a01b0383166105275760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161034a565b6001600160a01b0382166105885760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661064d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034a565b6001600160a01b0382166106af5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034a565b6001600160a01b038316600090815260208190526040902054818110156107275760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161034a565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061075e908490610be9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107aa91815260200190565b60405180910390a350505050565b6001600160a01b03821661080e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161034a565b80600260008282546108209190610be9565b90915550506001600160a01b0382166000908152602081905260408120805483929061084d908490610be9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166108f75760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161034a565b6001600160a01b0382166000908152602081905260409020548181101561096b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161034a565b6001600160a01b038316600090815260208190526040812083830390556002805484929061099a908490610c01565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b81811015610a12578581018301518582016040015282016109f6565b81811115610a24576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a5157600080fd5b919050565b60008060408385031215610a6957600080fd5b610a7283610a3a565b946020939093013593505050565b600080600060608486031215610a9557600080fd5b610a9e84610a3a565b9250610aac60208501610a3a565b9150604084013590509250925092565b60008060008060608587031215610ad257600080fd5b610adb85610a3a565b935060208501359250604085013567ffffffffffffffff80821115610aff57600080fd5b818701915087601f830112610b1357600080fd5b813581811115610b2257600080fd5b886020828501011115610b3457600080fd5b95989497505060200194505050565b600060208284031215610b5557600080fd5b610b5e82610a3a565b9392505050565b60008060408385031215610b7857600080fd5b610b8183610a3a565b9150610b8f60208401610a3a565b90509250929050565b600181811c90821680610bac57607f821691505b60208210811415610bcd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bfc57610bfc610bd3565b500190565b600082821015610c1357610c13610bd3565b50039056fea2646970667358221220ac0a16a8fd78e35006ba0420d2731f205d48a27af07021d7ce8e2ace66c3e7a364736f6c63430008090033";

type TestERC223ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC223ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC223__factory extends ContractFactory {
  constructor(...args: TestERC223ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestERC223";
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC223> {
    return super.deploy(name, symbol, overrides || {}) as Promise<TestERC223>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): TestERC223 {
    return super.attach(address) as TestERC223;
  }
  connect(signer: Signer): TestERC223__factory {
    return super.connect(signer) as TestERC223__factory;
  }
  static readonly contractName: "TestERC223";
  public readonly contractName: "TestERC223";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC223Interface {
    return new utils.Interface(_abi) as TestERC223Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC223 {
    return new Contract(address, _abi, signerOrProvider) as TestERC223;
  }
}
